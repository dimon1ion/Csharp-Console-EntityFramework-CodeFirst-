// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _07_11_2021_Entity_Framework_Core_CodeFirst.Contexts;

namespace Homework_07112021.Migrations
{
    [DbContext(typeof(OlympContext))]
    partial class OlympContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Medals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Medals");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Participants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.ParticipantsSportsMedals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MedalsId")
                        .HasColumnType("int");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<int?>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedalsId");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("SportId");

                    b.ToTable("ParticipantsSportsMedals");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Sports", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Participants", b =>
                {
                    b.HasOne("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Country", "Country")
                        .WithMany("Participants")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.ParticipantsSportsMedals", b =>
                {
                    b.HasOne("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Medals", "Medal")
                        .WithMany("ParticipantsSportsMedals")
                        .HasForeignKey("MedalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Participants", "Participant")
                        .WithMany("ParticipantsSportsMedals")
                        .HasForeignKey("ParticipantId");

                    b.HasOne("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Sports", "Sport")
                        .WithMany("ParticipantsSportsMedals")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medal");

                    b.Navigation("Participant");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Country", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Medals", b =>
                {
                    b.Navigation("ParticipantsSportsMedals");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Participants", b =>
                {
                    b.Navigation("ParticipantsSportsMedals");
                });

            modelBuilder.Entity("_07_11_2021_Entity_Framework_Core_CodeFirst.Classes.Sports", b =>
                {
                    b.Navigation("ParticipantsSportsMedals");
                });
#pragma warning restore 612, 618
        }
    }
}
